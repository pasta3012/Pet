// Kh·ªüi t·∫°o th√¥ng s·ªë ban ƒë·∫ßu
let pet = {
    name: "Miu Miu",
    closeness: 50,
    happiness: 50,
    energy: 50,
    status: "ƒêang th·ª©c",
    isEating: false
};

let player = {
    name: "Hi·∫øch",
    balance: 1000
};

// ƒê·ªãnh nghƒ©a c√°c lo·∫°i th·ª©c ƒÉn
const foods = {
    fish: { emoji: "üêü", price: 10, energy: 15, happiness: 5 },
    meat: { emoji: "üçñ", price: 15, energy: 20, happiness: 7 },
    vegetable: { emoji: "ü•ï", price: 5, energy: 10, happiness: 3 }
};

// C·∫≠p nh·∫≠t th√¥ng tin l√™n giao di·ªán
function updateStats() {
    document.getElementById("pet-name").textContent = pet.name;
    document.getElementById("affection").textContent = pet.affection;
    document.getElementById("happiness").textContent = pet.happiness;
    document.getElementById("energy").textContent = pet.energy;
    document.getElementById("status").textContent = pet.status;
    
    document.getElementById("player-name").textContent = player.name;
    document.getElementById("balance").textContent = player.balance.toLocaleString();
    
    // C·∫≠p nh·∫≠t tr·∫°ng th√°i n√∫t th·ª©c ƒÉn
    document.querySelectorAll(".food-options button").forEach(btn => {
        const foodType = btn.getAttribute("onclick").split("'")[1];
        btn.disabled = player.balance < foods[foodType].price || pet.isEating;
    });
}

// T∆∞∆°ng t√°c v·ªõi th√∫ c∆∞ng (vu·ªët ve)
function interactWithPet() {
    if (pet.isEating) return;
    
    // TƒÉng ƒë·ªô h·∫°nh ph√∫c v√† ƒë·ªô ƒë·ªëi
    pet.happiness = Math.min(100, pet.happiness + 5);
    pet.closeness = Math.min(100, pet.closeness + 3);
    
    // Gi·∫£m nƒÉng l∆∞·ª£ng
    pet.energy = Math.max(0, pet.energy - 2);
    
    // Ki·ªÉm tra tr·∫°ng th√°i
    updatePetStatus();
    
    // Hi·ªáu ·ª©ng khi ch·∫°m
    const petImage = document.getElementById("pet-image");
    petImage.style.transform = "scale(1.1)";
    setTimeout(() => {
        petImage.style.transform = "scale(1)";
    }, 200);
    
    updateStats();
}

// Cho th√∫ c∆∞ng ƒÉn
function feedPet(foodType) {
    if (pet.isEating) return;
    
    const food = foods[foodType];
    if (player.balance < food.price) {
        alert(`Kh√¥ng ƒë·ªß ti·ªÅn ƒë·ªÉ mua ${foodType}!`);
        return;
    }
    
    // Tr·ª´ ti·ªÅn
    player.balance -= food.price;
    
    // ƒê·∫∑t tr·∫°ng th√°i ƒëang ƒÉn
    pet.isEating = true;
    
    // Hi·ªÉn th·ªã bi·ªÉu t∆∞·ª£ng th·ª©c ƒÉn
    const foodDisplay = document.getElementById("food-display");
    foodDisplay.textContent = food.emoji;
    
    // Hi·ªáu ·ª©ng ƒÉn
    const petImage = document.getElementById("pet-image");
    petImage.classList.add("eating");
    
    // C·∫≠p nh·∫≠t giao di·ªán
    updateStats();
    
    // Sau khi ƒÉn xong
    setTimeout(() => {
        // TƒÉng ch·ªâ s·ªë
        pet.energy = Math.min(100, pet.energy + food.energy);
        pet.happiness = Math.min(100, pet.happiness + food.happiness);
        
        // K·∫øt th√∫c tr·∫°ng th√°i ƒÉn
        pet.isEating = false;
        foodDisplay.textContent = "";
        petImage.classList.remove("eating");
        
        // Ki·ªÉm tra tr·∫°ng th√°i
        updatePetStatus();
        
        // C·∫≠p nh·∫≠t giao di·ªán
        updateStats();
    }, 2000); // Th·ªùi gian ƒÉn: 2 gi√¢y
}

// C·∫≠p nh·∫≠t tr·∫°ng th√°i th√∫ c∆∞ng
function updatePetStatus() {
    if (pet.energy < 10) {
        pet.status = "Ki·ªát s·ª©c";
    } else if (pet.energy < 30) {
        pet.status = "M·ªát m·ªèi";
    } else if (pet.happiness > 80) {
        pet.status = "R·∫•t vui";
    } else {
        pet.status = "ƒêang th·ª©c";
    }
}

// H·ªá th·ªëng t·ª± ƒë·ªông gi·∫£m c√°c ch·ªâ s·ªë theo th·ªùi gian
setInterval(() => {
    pet.happiness = Math.max(0, pet.happiness - 1);
    pet.affection = Math.max(0, pet.closeness - 0.5);
    
    if (pet.status.includes("ng·ªß")) {
        pet.energy = Math.min(100, pet.energy + 5);
    } else {
        pet.energy = Math.max(0, pet.energy - 1);
    }
    
    updatePetStatus();
    updateStats();
}, 30000); // M·ªói 30 gi√¢y

// Kh·ªüi ch·∫°y ban ƒë·∫ßu
updateStats();
